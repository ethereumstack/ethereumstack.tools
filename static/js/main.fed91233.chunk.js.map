{"version":3,"sources":["themes/theme.ts","containers/ToolList.tsx","containers/MyApp.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","ToolList","tools","map","tool","Card","key","name","style","width","marginBottom","CardHeader","title","avatar","Avatar","variant","alt","src","logoUrl","CardContent","Typography","description","Link","href","url","MyApp","darkMode","useDarkMode","theme","value","useState","searchQuery","setSearchQuery","AppBar","Toolbar","Grid","container","alignContent","alignItems","justify","Paper","padding","InputBase","placeholder","onChange","ev","target","item","Tooltip","IconButton","onClick","toggle","CssBaseline","direction","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"gsGAGaA,EAAaC,YAAe,CACvCC,MAAO,CACLC,UAAW,CACTC,SAAU,UAEZC,QAAS,CACPC,UAAW,IAGfC,UAAW,CACTJ,UAAW,CACTK,KAAM,CACJC,WAAY,qBAIlBC,QAAS,CACPD,WAAY,CACVE,QAAS,WAKFC,EAAYX,YAAe,CACtCC,MAAO,CACLC,UAAW,CACTC,SAAU,UAEZC,QAAS,CACPC,UAAW,IAGfI,QAAS,CACPG,KAAM,OACNJ,WAAY,CACVE,QAASG,IAAK,KACdC,MAAOD,IAAK,OAGhBP,UAAW,CACTJ,UAAW,CACTK,KAAM,CACJC,WAAYK,IAAK,OAGrBE,SAAU,CACRR,KAAM,CACJC,WAAY,2BAGhBQ,cAAe,CACbT,KAAM,CACJU,MAAOJ,IAAK,U,wCCrBLK,EApBoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,oCAEIA,EAAMC,KAAI,SAACC,GAAD,OACR,kBAACC,EAAA,EAAD,CAAMjB,UAAW,EAAGkB,IAAKF,EAAKG,KAAMC,MAAO,CAACC,MAAO,QAASC,aAAc,SACxE,kBAACC,EAAA,EAAD,CAAYC,MAAOR,EAAKG,KAAMM,OAC5B,kBAACC,EAAA,EAAD,cAAY,CAACC,QAAS,UAAtB,CAAiCC,IAAKZ,EAAKG,KAAMU,IAAKb,EAAKc,aAE7D,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAahB,EAAKiB,aAClB,kBAACC,EAAA,EAAD,CAAMC,KAAMnB,EAAKoB,KAAMpB,EAAKoB,Y,QCqC3BC,G,MAlDS,WACtB,IAAMC,EAAWC,cACXC,EAAQF,EAASG,MAAQnC,EAAYZ,EAFf,EAGUgD,mBAAS,IAHnB,mBAGrBC,EAHqB,KAGRC,EAHQ,KAK5B,OACE,kBAAC,IAAD,CAAkBJ,MAAOA,GACvB,kBAACK,EAAA,EAAD,CAAQ/C,SAAS,SAASc,MAAM,UAAUZ,UAAW,GACnD,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,aAAa,SAASC,WAAW,SAASC,QAAQ,iBAChE,kBAACnB,EAAA,EAAD,CAAYL,QAAQ,MAAM,oCAC1B,kBAACyB,EAAA,EAAD,CAAOhC,MAAO,CACZjB,WAAY,qBACZkD,QAAS,oBACThC,MAAO,OACNrB,UAAW,GACZ,kBAACsD,EAAA,EAAD,CAAWC,YAAY,oBAAoBC,SACzC,SAACC,GAAD,OAAuCb,EAAea,EAAGC,OAAOjB,WAGpE,kBAACM,EAAA,EAAD,CAAMY,MAAI,GACR,kBAACC,EAAA,EAAD,CAASpC,MAAO,yDACd,kBAACqC,EAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACD,EAAA,EAAD,CAASpC,MAAO,oBACd,kBAACqC,EAAA,EAAD,CAAYC,QAASxB,EAASyB,QAC3BzB,EAASG,MAAQ,kBAAC,IAAD,MAAsB,kBAAC,IAAD,YAOpD,6BACE,kBAACuB,EAAA,EAAD,MACA,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACC,aAAa,SAASC,WAAW,SAASC,QAAQ,SAASc,UAAU,UACnF,kBAAC,EAAD,CAAUnD,MAAOA,EAAMoD,QACrB,SAAClD,GACC,OAAOA,EAAKG,KAAKgD,cAAcC,SAASzB,IACtC3B,EAAKiB,YAAYkC,cAAcC,SAASzB,aCjDxD0B,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,W","file":"static/js/main.fed91233.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: grey[900],\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardContent, Avatar, Typography, Link } from \"@material-ui/core\";\n\ninterface ITool {\n  name: string;\n  description: string;\n  logoUrl: string;\n  url: string;\n}\n\ninterface IProps {\n  tools: ITool[];\n}\n\nconst ToolList: React.FC<IProps> = ({ tools }) => {\n  return (\n    <>\n      {\n        tools.map((tool) => (\n          <Card elevation={1} key={tool.name} style={{width: \"500px\", marginBottom: \"10px\"}}>\n            <CardHeader title={tool.name} avatar={\n              <Avatar {...{variant: \"square\"}} alt={tool.name} src={tool.logoUrl}/>\n            }/>\n            <CardContent>\n              <Typography>{tool.description}</Typography>\n              <Link href={tool.url}>{tool.url}</Link>\n            </CardContent>\n          </Card >\n        ))\n      }\n    </>\n  );\n};\n\nexport default ToolList;\n","import React, { useState, ChangeEvent } from \"react\";\nimport { MuiThemeProvider, AppBar, Toolbar, Typography, IconButton, Tooltip, CssBaseline, Grid, InputBase, Paper } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { lightTheme, darkTheme } from \"../themes/theme\";\nimport ToolList from \"./ToolList\";\nimport tools from \"../tools.json\";\n\nimport \"./MyApp.css\";\n\nconst MyApp: React.FC = () => {\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"space-between\">\n            <Typography variant=\"h6\">{\"ðŸ§° ethereumstack.tools\"}</Typography>\n            <Paper style={{\n              background: \"rgba(0, 0, 0, 0.1)\",\n              padding: \"0px 10px 0px 10px\",\n              width: \"40%\",\n            }} elevation={0}>\n              <InputBase placeholder=\"Search for a tool\" onChange={\n                (ev: ChangeEvent<HTMLInputElement>) => setSearchQuery(ev.target.value)\n              } />\n            </Paper>\n            <Grid item>\n              <Tooltip title={\"An index of open-source chain-agnostic Ethereum tools\"}>\n                <IconButton>\n                  <HelpIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={\"Toggle Dark Mode\"}>\n                <IconButton onClick={darkMode.toggle}>\n                  {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div>\n        <CssBaseline />\n        <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"center\" direction=\"column\">\n          <ToolList tools={tools.filter(\n            (tool) => {\n              return tool.name.toLowerCase().includes(searchQuery) ||\n                tool.description.toLowerCase().includes(searchQuery);\n            })\n          }></ToolList>\n        </Grid>\n      </div>\n    </MuiThemeProvider >\n  );\n};\n\nexport default MyApp;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MyApp from \"./containers/MyApp\";\n\nReactDOM.render(<MyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}